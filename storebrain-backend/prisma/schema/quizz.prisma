model Quizz {
  id                 Int      @id @default(autoincrement())
  title              String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  signatureRequestId String?  @unique

  // Relations
  sections          QuizzSection[]      @relation("QuizzSections")
  createdById       Int
  createdBy         User                @relation("CreatedQuizz", fields: [createdById], references: [id], onDelete: Cascade)
  assignedToId      Int
  assignedTo        User                @relation("AssignedQuizz", fields: [assignedToId], references: [id], onDelete: Cascade)
  dateSignature     DateTime?
  JobOnboardingStep JobOnboardingStep[]
}

model QuizzSection {
  id        Int             @id @default(autoincrement())
  title     String
  quizzId   Int
  quizz     Quizz           @relation("QuizzSections", fields: [quizzId], references: [id], onDelete: Cascade)
  questions QuizzQuestion[] @relation("SectionQuestions")
}

model QuizzQuestion {
  id              Int           @id @default(autoincrement())
  text            String
  sectionId       Int
  section         QuizzSection  @relation("SectionQuestions", fields: [sectionId], references: [id], onDelete: Cascade)
  answers         QuizzAnswer[] @relation("QuestionAnswers")
  correctAnswerId Int?
  imageUrl        String?
}

model QuizzAnswer {
  id         Int           @id @default(autoincrement())
  text       String
  isCorrect  Boolean       @default(false)
  questionId Int
  question   QuizzQuestion @relation("QuestionAnswers", fields: [questionId], references: [id], onDelete: Cascade)
  User       User?         @relation(fields: [userId], references: [id])
  userId     Int?
}
