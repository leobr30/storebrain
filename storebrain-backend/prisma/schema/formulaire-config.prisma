model Form {
  id        String   @id @default(uuid())
  title     String
  comment   String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sections  Section[]  
  responses EmployeeResponse[]
  histories FormHistory[]
  userJobOnboardings UserJobOnboarding[]
  
}

model Section {
  id        String   @id @default(uuid())
  formId    String
  title     String
  createdAt DateTime @default(now())
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  items     Item[]   
}

model Item {
  id        String   @id @default(uuid())
  sectionId String
  label     String
  selected  Boolean @default(false) 
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}

model EmployeeResponse {
  id        String   @id @default(uuid())
  userId    Int
  formId    String
  responses Json
  comment   String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  form Form @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model FormHistory {
  id        String   @id @default(uuid())
  userId    Int
  formId    String
  responses Json
  comment   String?  // âœ… Ajout du champ comment
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  form Form @relation(fields: [formId], references: [id], onDelete: Cascade)
}




